{"version":3,"sources":["dog.jpeg","App.js","reportWebVitals.js","index.js"],"names":["App","handleClick","e","console","warn","target","name","setState","score","state","life","alert","this","className","onClick","alt","src","dog","style","animationDuration","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAe,G,MAAA,IAA0B,kCCIpBA,E,kDACnB,aAAe,IAAD,8BACZ,gBAOFC,YAAc,SAACC,GACbC,QAAQC,KAAKF,EAAEG,OAAOC,MACD,QAAjBJ,EAAEG,OAAOC,KACX,EAAKC,SAAS,CACZC,MAAO,EAAKC,MAAMD,MAAQ,IAGL,IAApB,EAAKC,MAAMC,MACZC,MAAM,aACN,EAAKJ,SAAS,CACZG,KAAM,EACNF,MAAO,KAGT,EAAKD,SAAS,CACZG,KAAM,EAAKD,MAAMC,KAAO,KArB9B,EAAKD,MAAQ,CACXC,KAAM,EACNF,MAAO,GAJG,E,qDA8BJ,IAAD,EACiBI,KAAKH,MAArBC,EADD,EACCA,KAAMF,EADP,EACOA,MACd,OACE,gCACE,sBAAKK,UAAU,cAAf,qCAAkCH,KAClC,qBAAKG,UAAU,UAAf,SACE,qBAAKA,UAAU,QAAQC,QAASF,KAAKX,YAArC,SACE,qBACEc,IAAI,SACJC,IAAKC,EACLX,KAAK,MACLO,UAAU,MACVK,MAAO,CACLC,kBAAkB,GAAD,OAAK,GAAKX,EAAQ,GAAlB,YAKzB,sBAAKK,UAAU,eAAf,+BAAkCL,Y,GAjDTY,aCQlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f06da192.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dog.be3575f4.jpeg\";","import React, { Component } from \"react\";\nimport \"./App.scss\";\n\nimport dog from \"./dog.jpeg\";\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      life: 3,\n      score: 0,\n    };\n  }\n\n  handleClick = (e) => {\n    console.warn(e.target.name);\n    if (e.target.name ==='dog') {\n      this.setState({\n        score: this.state.score + 1\n      });\n    } else {\n      if(this.state.life === 1) {\n        alert('game over');\n        this.setState({\n          life: 3,\n          score: 0,\n        })\n      } else {\n        this.setState({\n          life: this.state.life - 1\n        });\n      }\n    } \n  };\n\n\n  render() {\n    const { life, score } = this.state;\n    return (\n      <div>\n        <div className=\"center life\">生命值：{life}</div>\n        <div className=\"outside\">\n          <div className=\"frame\" onClick={this.handleClick}>\n            <img\n              alt=\"狗\"\n              src={dog}\n              name=\"dog\"\n              className=\"dog\"\n              style={{\n                animationDuration: `${4 / (score + 1)}s`,\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"center score\">得分：{score}</div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}